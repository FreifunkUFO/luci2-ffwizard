#!/bin/sh

. /usr/share/libubox/jshn.sh


#set_wizard_device wifi-iface cfg section, wifi ifname, SSID, BSSID, Channel
set_wizard_device() {
	local cfg="$1"
	local ifc="$2"
	local ssid="$3"
	local bssid="$4"
	local channel="$5"
	config_get ifname $cfg ifname
	if [ $ifname == $ifc ]; then
		config_get device $cfg device
		if ! uci_get ffwizard $cfg >/dev/null ; then
			uci_add ffwizard wifi "$device"
		fi
		phy_idx=$(echo $dev | cut -b6)
		uci_set ffwizard "$device" phy_idx $phy_idx
		uci_set ffwizard "$device" ssid $ssid
		uci_set ffwizard "$device" bssid $bssid
		uci_set ffwizard "$device" channel $channel
		uci_set ffwizard "$device" olsr_mesh 1
	fi
}

wlan_ifc=""
wifi_restart=1

logger -t "ffwizard_autoconf" "ubus call network.wireless status"
wifi_data=`ubus call network.wireless status`
json_load "$wifi_data"
json_get_keys wifi_res
for i in $wifi_res ; do
	json_select $i
	json_get_var wifi_disabled disabled
	if [ $wifi_disabled == 1 ] ; then
		uci set wireless.$i.disabled=0
		uci set wireless.$i.country=00
		#uci commit wireless
	else
		wifi_restart=0
	fi
	json_select ".."
done

json_cleanup

if [ $wifi_restart == 1 ] ; then
	logger -t "ffwizard_autoconf" "wifi restart and sleep 20s"
	#FIXME do it with ubus call and list
	/sbin/wifi restart
	/bin/sleep 20
	wifi_data=`ubus call network.wireless status`
	json_load "$wifi_data"
	json_get_keys wifi_res
	for i in $wifi_res ; do
		json_select $i
		json_get_var wifi_disabled disabled
		if [ $wifi_disabled == 0 ] ; then
			json_select interfaces
			json_get_keys wifi_ifc_res
			for j in $wifi_ifc_res ; do
				json_select $j
				json_get_var wifi_ifc_name ifname
				wlan_ifc="$wlan_ifc $wifi_ifc_name"
				json_select ".."
			done
			json_select ".."
		fi
		json_select ".."
	done
fi

json_cleanup

for ifc in $wlan_ifc ; do
	logger -t "ffwizard_autoconf" "ubus call iwinfo $ifc scan"
	scan_data=$(ubus call iwinfo scan '{ "device": "'$ifc'" }')
	json_load "$scan_data"
	json_select results
	json_get_keys scan_res
	sel_quality=0
	sel_ssid=""
	sel_bssid=""
	sel_channel=""
	for i in $scan_res ; do
		json_select $i
		json_select encryption
		json_get_var sta_encryption enabled
		json_select ".."
		if [ $sta_encryption == 0 ] ; then
			json_get_var sta_mode mode
			if [ $sta_mode == "Ad-Hoc" ] ; then
				json_get_var sta_ssid ssid
				if echo "$sta_ssid" | grep -q "freifunk\.net" ; then
					json_get_var sta_quality quality
					if [ $sta_quality -gt $sel_quality ] ; then
						sel_quality=$sta_quality
						json_get_var sta_bssid bssid
						json_get_var sta_channel channel
						json_get_var sta_signal signal
						json_get_var sta_quality_max quality_max
						sel_ssid=$sta_ssid
						sel_bssid=$sta_bssid
						sel_channel=$sta_channel
					fi
				fi
			fi
		fi
		json_select ".."
	done
	#TODO
	logger -t "ffwizard_autoconf" "scan result for $ifc ssid: $sel_ssid bssid: $sel_bssid channel: $sel_channel"
	config_load wireless
	config_foreach set_wizard_device wifi-iface $ifc $sel_ssid $sel_bssid $sel_channel
done
